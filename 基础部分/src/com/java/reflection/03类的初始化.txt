类的主动引用（一定会发生类的初始化）

- 当初始化一个类，如果其父类没有被初始化，则先会初始化他的父类
- 使用java.lang.reflect包的方法对类进行反射调用
- new一个类的对象
- 当虚拟机启动，先初始化main所在的类
- 调用类的静态成员（除了final常量）和静态方法

类的被动引用（不会发生类的初始化）

- 当访问静态域时，只有真正声明这个域的类才会被初始化。如:当子类引用父类的静态变量，不会导致
  子类的初始化
- 通过数组定义类引用，不会触发此类的初始化
- 引用常量不会触发此类的初始化（常量在链接阶段就存入调用类的常量池中了）

