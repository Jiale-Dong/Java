1. 文件的基本操作方法
   - 1. java.io提供了File对象来操作文件和目录
   - 2. 在Win平台中，使用\作为路径分隔符，在Java字符串中需要用\\表示一个\。
        "E:\1.txt"；
   - 3. Linux平台使用/作为路径分隔符："/usr/bin/javac"
   - 4. 相对路径和绝对路径
   - 5. File对象有3种形式表示的路径
   - 6. 判断当前路径和文件是否存在
   - 文件是否可读、可写、可执行和大小

2. 输入流InputStream    程序从输入流读数据
   - InputStream并不是一个接口，而是一个抽象类，它是所有输入流的超类。
   - 这个抽象类定义的一个最重要的方法就是int read()方法。这个方法会读
     取输入流的下一个字节，并返回字节表示的int值（0~255）。如果已读到
     末尾，返回-1表示不能继续读取了。
   - Java 7引入的新的try(resource)的语法，只需要编写try语句，让编译
     器自动为我们关闭资源。
   - 利用缓冲区一次性读取多个字节，InputStream提供了两个重载方法来支持
     读取多个字节。

3. 输出流   程序向输出流写数据
   - 和InputStream类似，OutputStream也是抽象类，它是所有输出流的超类。
     这个抽象类定义的一个最重要的方法就是void write(int b)。
   - OutputStream也提供了close()方法关闭输出流
   - OutputStream还提供了一个flush()方法，它的目的是将缓冲区的内容真正输出到目的地
   - try(resource)来保证OutputStream在无论是否发生IO错误的时候都能够正确地关闭:
     如果磁盘已满，无权限写入，没有考虑发生异常时正确关闭资源


















